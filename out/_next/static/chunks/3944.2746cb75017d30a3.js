"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3944],{8057:function(n,e,t){t.d(e,{Z:function(){return p}});var o=t(1799),i=t(9396),r=t(5893),a=t(2752),c=t(1130),s={"/index.js":{code:'import React, { StrictMode } from "react";\nimport { createRoot } from \'react-dom/client\';\nimport "./styles.css";\nimport "./center.css";\n\nimport App from "./App";\n\nconst container = document.getElementById(\'root\');\nconst root = createRoot(container);\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n',hidden:!0},"/center.css":{code:"\nbody {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 450px;\n    color: currentColor;\n}\n",hidden:!0},"/styles.css":{code:"/* Custom styles for your React previews here */\nbody {\n  font-family: sans-serif;\n  -webkit-font-smoothing: auto;\n  -moz-font-smoothing: auto;\n  -moz-osx-font-smoothing: grayscale;\n  font-smoothing: auto;\n  text-rendering: optimizeLegibility;\n  font-smooth: always;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n}\n",hidden:!0},"/index.html":{code:'<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8" />\n  <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n  <title>React app</title>\n</head>\n<body>\n  <div id="root"></div>\n</body>\n</html>\n',hidden:!0}},d={colors:{hover:"var(--maximeheckel-colors-brand)",clickable:"var(--maximeheckel-colors-typeface-secondary)",accent:"var(--maximeheckel-colors-brand)",errorSurface:"var(--maximeheckel-colors-danger-emphasis)",error:"var(--maximeheckel-colors-danger)",surface3:"var(--maximeheckel-colors-emphasis)",surface2:"var(--maximeheckel-border-color)",surface1:"var(--code-snippet-background)"},syntax:{plain:"var(--token-comment)",comment:{color:"var(--token-comment)"},keyword:"var(--token-keyword)",tag:"var(--token-symbol)",punctuation:"var(--token-punctuation)",definition:"var(--token-function)",property:"var(--token-function)",static:"var(--token-comment)",string:"var(--token-selector)"},font:{body:"var(--font-display)",mono:"var(--font-mono)",size:"14px",lineHeight:"26px"}},m={showNavigator:!1,showInlineErrors:!0,showLineNumbers:!0,editorHeight:520},l=(0,c.g)("div",{".sp-layout":{position:"relative",marginBottom:"2.25rem",borderRadius:"var(--border-radius-2)",boxShadow:c.a[1],"@media (max-width: 750px)":{display:"block"},"@media (max-width: 1200px)":{width:"100vw",left:"50%",right:"50%",marginLeft:"-50vw",marginRight:"-50vw",borderRadius:"0px"},"@media (min-width: 1200px)":{position:"relative",width:"calc(100% + 200px)",marginLeft:"-100px",marginRight:"-100px"}},".cm-gutterElement":{fontSize:"12px",userSelect:"none",opacity:"1",color:"var(--maximeheckel-colors-typeface-tertiary)"},".button":{backgroundColor:"var(--maximeheckel-colors-body)!important",cursor:"pointer !important","&:hover":{backgroundColor:"var(--maximeheckel-colors-body)!important"}}}),p=function(n){var e,t=n.files,c=n.dependencies,p=n.template,h=n.autorun,u=void 0===h||h,v=n.editorOnly,f=void 0!==v&&v,x=n.renderOnly,g=void 0!==x&&x,y=(null===(e=n.options)||void 0===e?void 0:e.editorWidthPercentage)||50,k=100-y,b={react:s,"react-ts":"",vanilla:"","vanilla-ts":"",angular:"",vue:"",vue3:"",svelte:"",solid:""};return(0,r.jsx)(l,{children:(0,r.jsx)(a.oT,{template:p,theme:d,files:(0,o.Z)({},t,b[p]),customSetup:{dependencies:c||{}},options:{autorun:u},children:(0,r.jsxs)(a.sp,{children:[f?null:(0,r.jsx)(a.Gj,{showNavigator:m.showNavigator,style:{height:m.editorHeight,flexGrow:k,flexShrink:k,minWidth:k/(k+y)*700}}),g?null:(0,r.jsx)(a._V,(0,i.Z)((0,o.Z)({},m),{style:{height:m.editorHeight,flexGrow:y,flexShrink:y,minWidth:y/(k+y)*700}}))]})})})}},3944:function(n,e,t){t.r(e);var o=t(5893),i=t(2498),r=t(8057);e.default=function(){var n=(0,i.d)().dark;return(0,o.jsx)(r.Z,{template:"react",dependencies:{"framer-motion":"6.2.4","@stitches/react":"1.2.5"},files:{"/App.js":{code:"import { motion, AnimatePresence } from 'framer-motion';\nimport React from 'react';\nimport { Wrapper, Toast } from './Components';\nimport './scene.css';\n\nconst ITEMS = ['Welcome \ud83d\udc4b', 'An error occurred \ud83d\udca5', 'You did it \ud83c\udf89!', 'Success \u2705', 'Warning \u26a0\ufe0f'];\n\nconst Notifications = () => {\n  const [notifications, setNotifications] = React.useState(ITEMS)\n\n  return (\n    <Wrapper> \n      <AnimatePresence>\n        {notifications.map((item) => \n            <motion.div\n              key={item}\n              onClick={() => setNotifications((prev) => prev.filter(notification => notification !== item))}\n              layout\n              initial={{\n                y: 150,\n                x: 0,\n                opacity: 0,\n              }} \n              animate={{\n                y: 0,\n                x: 0,\n                opacity: 1,\n              }}\n              exit={{\n                opacity: 0,\n              }}\n            >\n              <Toast>{item}</Toast>\n            </motion.div> \n        )}   \n      </AnimatePresence>\n    </Wrapper>\n  );\n}\n\nexport default Notifications\n"},"/Components.js":{code:"import { styled } from '@stitches/react';\n\nexport const Wrapper = styled('div', {\n    position: 'fixed',\n    bottom: '50px',\n    left: '50%',\n    right: '0',\n    transform: 'translateX(-50%)',\n})\n\nexport const Toast = styled('div', {\n    background: '#1A1D23',\n    borderRadius: '8px',\n    border: '1px solid #2B303B',\n    width: '200px',\n    color: '#C4C9D4',\n    padding: '8px 16px',\n    marginBottom: '12px',\n    userSelect: 'none',\n    cursor: 'pointer',\n})\n"},"/scene.css":{code:n?"\nhtml {\n    background: #20222B;\n}\n\ncanvas {\n    width: 100vw;\n    height: 100vh;\n}":"\nhtml {\n    background: #F7F7FB;\n}\n\ncanvas {\n    width: 100vw;\n    height: 100vh;\n}",hidden:!0}}})}}}]);