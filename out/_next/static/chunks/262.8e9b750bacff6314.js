"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[262],{8057:function(n,t,e){e.d(t,{Z:function(){return m}});var o=e(1799),i=e(9396),a=e(5893),r=e(2752),s=e(1130),c={"/index.js":{code:'import React, { StrictMode } from "react";\nimport { createRoot } from \'react-dom/client\';\nimport "./styles.css";\nimport "./center.css";\n\nimport App from "./App";\n\nconst container = document.getElementById(\'root\');\nconst root = createRoot(container);\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n',hidden:!0},"/center.css":{code:"\nbody {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 450px;\n    color: currentColor;\n}\n",hidden:!0},"/styles.css":{code:"/* Custom styles for your React previews here */\nbody {\n  font-family: sans-serif;\n  -webkit-font-smoothing: auto;\n  -moz-font-smoothing: auto;\n  -moz-osx-font-smoothing: grayscale;\n  font-smoothing: auto;\n  text-rendering: optimizeLegibility;\n  font-smooth: always;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n}\n",hidden:!0},"/index.html":{code:'<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8" />\n  <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n  <title>React app</title>\n</head>\n<body>\n  <div id="root"></div>\n</body>\n</html>\n',hidden:!0}},l={colors:{hover:"var(--maximeheckel-colors-brand)",clickable:"var(--maximeheckel-colors-typeface-secondary)",accent:"var(--maximeheckel-colors-brand)",errorSurface:"var(--maximeheckel-colors-danger-emphasis)",error:"var(--maximeheckel-colors-danger)",surface3:"var(--maximeheckel-colors-emphasis)",surface2:"var(--maximeheckel-border-color)",surface1:"var(--code-snippet-background)"},syntax:{plain:"var(--token-comment)",comment:{color:"var(--token-comment)"},keyword:"var(--token-keyword)",tag:"var(--token-symbol)",punctuation:"var(--token-punctuation)",definition:"var(--token-function)",property:"var(--token-function)",static:"var(--token-comment)",string:"var(--token-selector)"},font:{body:"var(--font-display)",mono:"var(--font-mono)",size:"14px",lineHeight:"26px"}},d={showNavigator:!1,showInlineErrors:!0,showLineNumbers:!0,editorHeight:520},p=(0,s.g)("div",{".sp-layout":{position:"relative",marginBottom:"2.25rem",borderRadius:"var(--border-radius-2)",boxShadow:s.a[1],"@media (max-width: 750px)":{display:"block"},"@media (max-width: 1200px)":{width:"100vw",left:"50%",right:"50%",marginLeft:"-50vw",marginRight:"-50vw",borderRadius:"0px"},"@media (min-width: 1200px)":{position:"relative",width:"calc(100% + 200px)",marginLeft:"-100px",marginRight:"-100px"}},".cm-gutterElement":{fontSize:"12px",userSelect:"none",opacity:"1",color:"var(--maximeheckel-colors-typeface-tertiary)"},".button":{backgroundColor:"var(--maximeheckel-colors-body)!important",cursor:"pointer !important","&:hover":{backgroundColor:"var(--maximeheckel-colors-body)!important"}}}),m=function(n){var t,e=n.files,s=n.dependencies,m=n.template,h=n.autorun,u=void 0===h||h,y=n.editorOnly,g=void 0!==y&&y,f=n.renderOnly,v=void 0!==f&&f,x=(null===(t=n.options)||void 0===t?void 0:t.editorWidthPercentage)||50,w=100-x,b={react:c,"react-ts":"",vanilla:"","vanilla-ts":"",angular:"",vue:"",vue3:"",svelte:"",solid:""};return(0,a.jsx)(p,{children:(0,a.jsx)(r.oT,{template:m,theme:l,files:(0,o.Z)({},e,b[m]),customSetup:{dependencies:s||{}},options:{autorun:u},children:(0,a.jsxs)(r.sp,{children:[g?null:(0,a.jsx)(r.Gj,{showNavigator:d.showNavigator,style:{height:d.editorHeight,flexGrow:w,flexShrink:w,minWidth:w/(w+x)*700}}),v?null:(0,a.jsx)(r._V,(0,i.Z)((0,o.Z)({},d),{style:{height:d.editorHeight,flexGrow:x,flexShrink:x,minWidth:x/(w+x)*700}}))]})})})}},262:function(n,t,e){e.r(t),e.d(t,{default:function(){return r}});var o=e(5893),i=e(8057),a={snippet1:"import { styled } from '@stitches/react';\nimport { motion } from 'framer-motion';\nimport './scene.css';\n\nconst ListItem = styled(motion.li, {\n  width: '100%',\n  minWidth: '300px',\n  background: 'hsla(222, 89%, 65%, 10%)',\n  boxShadow: '0 0px 10px -6px rgba(0, 24, 40, 0.3)',\n  borderRadius: '8px',\n  padding: '8px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  cursor: 'pointer',\n  marginBottom: '0px',\n  color: 'hsl(223, 15%, 65%)',\n  fontSize: 18,\n});\n\nconst Button = styled('button', {\n  background: 'transparent',\n  cursor: 'pointer',\n  border: 'none',\n  shadow: 'none',\n  color: 'hsl(223, 15%, 65%)',\n  display: 'flex',\n});\n\nconst InfoBox = styled('div', {\n  width: '50%',\n});\n\nconst ARTICLES = [\n  {\n    category: 'swift',\n    title: 'Intro to SwiftUI',\n    description: 'An article with some SwitftUI basics',\n    id: 1,\n  },\n];\n\nconst Item = (props) => {\n  const { article } = props;\n\n  const readButtonVariants = {\n    hover: {\n      opacity: 1,\n    },\n    // Uncomment the variant below and comment the variant above and notice the button will not show up on hover\n    /*  hoverme: {\n        opacity: 1,\n      },\n    */\n    initial: {\n      opacity: 0,\n    },\n    magic: {\n      rotate: 360,\n      opacity: 1,\n    },\n  };\n\n  return (\n    <ListItem layout initial=\"initial\" whileHover=\"hover\">\n      <InfoBox>{article.title}</InfoBox>\n      <motion.div\n        // Uncomment me and notice the button now rotates and is always visible\n        // animate=\"magic\"\n        variants={readButtonVariants}\n        transition={{ duration: 0.25 }}\n      >\n        <Button\n          aria-label=\"read article\"\n          title=\"Read article\"\n          onClick={(e) => e.preventDefault()}\n        >\n          &#8594;\n        </Button>\n      </motion.div>\n    </ListItem>\n  );\n};\n\nconst Example = () => <Item article={ARTICLES[0]} />;\n\nexport default Example;",snippet2:"import { styled } from '@stitches/react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport React from 'react';\nimport Pill from './Pill';\nimport './scene.css';\n\nconst List = styled(motion.ul, {\n  padding: '16px',\n  width: '350px',\n  background: ' hsl(223, 15%, 10%)',\n  borderRadius: '8px',\n  display: 'grid',\n  gap: '16px',\n});\n\n\nconst ListItem = styled(motion.li, {\n  minWidth: '300px',\n  background: 'hsla(222, 89%, 65%, 10%)',\n  boxShadow: '0 0px 10px -6px rgba(0, 24, 40, 0.3)',\n  borderRadius: '8px',\n  padding: '8px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  cursor: 'pointer',\n  marginBottom: '0px',\n  color: 'hsl(223, 15%, 65%)',\n  fontSize: 18,\n});\n\nconst Button = styled('button', {\n  background: 'transparent',\n  cursor: 'pointer',\n  border: 'none',\n  shadow: 'none',\n  color: 'hsl(223, 15%, 65%)',\n  display: 'flex',\n});\n\nconst InfoBox = styled('div', {\n  width: '50%',\n});\n\nconst FilterWrapper = styled('div', {\n  marginBottom: '16px',\n  input: {\n    marginRight: '4px',\n  },\n  label: {\n    marginRight: '4px',\n  },\n});\n\nconst ARTICLES = [\n  {\n    category: 'swift',\n    title: 'Intro to SwiftUI',\n    description: 'An article with some SwitftUI basics',\n    id: 1,\n  },\n  {\n    category: 'js',\n    title: 'Awesome React stuff',\n    description: 'My best React tips!',\n    id: 2,\n  },\n  {\n    category: 'js',\n    title: 'Styled components magic',\n    description: 'Get to know ways to use styled components',\n    id: 3,\n  },\n  {\n    category: 'ts',\n    title: 'A guide to Typescript',\n    description: 'Type your React components!',\n    id: 4,\n  },\n];\n\nconst categoryToVariant = {\n  js: 'warning',\n  ts: 'info',\n  swift: 'danger',\n};\n\nconst Item = (props) => {\n  const { article, showCategory } = props;\n\n  const readButtonVariants = {\n    hover: {\n      opacity: 1,\n    },\n    initial: {\n      opacity: 0,\n    },\n  };\n\n  return (\n    <ListItem initial=\"initial\" whileHover=\"hover\">\n      <InfoBox>{article.title}</InfoBox>\n      {/* Try to remove/comment the AnimatePresence component below! */}\n      <AnimatePresence>\n        {showCategory && (\n          <motion.div\n            initial={{ opacity: 0 }}\n            // initial={{ opacity: 0, scale: 1}}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n            // exit={{ opacity: 0, scale: 0, }}\n          >\n            <Pill variant={categoryToVariant[article.category]}>\n              {article.category}\n            </Pill>\n          </motion.div>\n        )}\n      </AnimatePresence>\n      <motion.div variants={readButtonVariants} transition={{ duration: 0.25 }}>\n        <Button\n          aria-label=\"read article\"\n          title=\"Read article\"\n          onClick={(e) => e.preventDefault()}\n        >\n          &#8594;\n        </Button>\n      </motion.div>\n    </ListItem>\n  );\n};\n\nconst Component = () => {\n  const [showCategory, setShowCategory] = React.useState(false);\n\n  return (\n    <>\n      <FilterWrapper>\n        <div>\n          <input\n            type=\"checkbox\"\n            id=\"showCategory\"\n            checked={showCategory}\n            onChange={() => setShowCategory((prev) => !prev)}\n          />\n          <label htmlFor=\"showCategory\">Show Category</label>\n        </div>\n      </FilterWrapper>\n      <List>\n        {ARTICLES.map((article) => (\n          <Item\n            key={article.id}\n            article={article}\n            showCategory={showCategory}\n          />\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default Component;",snippet3:"import { styled } from '@stitches/react';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport React from 'react';\nimport './scene.css';\n\nconst SwitchWrapper1 = styled(motion.div, {\n  width: '50px',\n  height: '30px',\n  borderRadius: '20px',\n  cursor: 'pointer',\n  display: 'flex',\n});\n\nconst SwitchHandle1 = styled(motion.div, {\n  background: '#fff',\n  width: '30px',\n  height: '30px',\n  borderRadius: '50%',\n});\n\n// Attempt at a Switch motion component without layout animation: It simply does not work\nconst Switch1 = () => {\n  const [active, setActive] = React.useState(false);\n\n  const switchVariants = {\n    initial: {\n      backgroundColor: '#111',\n    },\n    animate: (active) => ({\n      backgroundColor: active ? '#f90566' : '#111',\n      justifyContent: active ? 'flex-end' : 'flex-start',\n    }),\n  };\n\n  return (\n    <SwitchWrapper1\n      initial=\"initial\"\n      animate=\"animate\"\n      onClick={() => setActive((prev) => !prev)}\n      variants={switchVariants}\n      custom={active}\n    >\n      <SwitchHandle1 />\n    </SwitchWrapper1>\n  );\n};\n\nconst SwitchWrapper2 = styled('div', {\n  width: '50px',\n  height: '30px',\n  borderRadius: '20px',\n  cursor: 'pointer',\n  display: 'flex',\n  background: '#111',\n  justifyContent: 'flex-start',\n\n  '&[data-isactive=\"true\"]': {\n    background: '#f90566',\n    justifyContent: 'flex-end',\n  },\n});\n\nconst SwitchHandle2 = styled(motion.div, {\n  background: '#fff',\n  width: '30px',\n  height: '30px',\n  borderRadius: '50%',\n});\n\n// Simpler version of the Switch motion component using layout animation\nconst Switch2 = () => {\n  const [active, setActive] = React.useState(false);\n\n  return (\n    <SwitchWrapper2\n      data-isactive={active}\n      onClick={() => setActive((prev) => !prev)}\n    >\n      <SwitchHandle2 layout />\n    </SwitchWrapper2>\n  );\n};\n\nconst Example = () => (\n  <div style={{ maxWidth: '300px' }}>\n    <p>\n      Switch 1: Attempt at animating justify-content in a Framer Motion animation\n      object.\n    </p>\n    <Switch1 />\n    <br />\n    <p>\n      Switch 2: Animating justify-content using layout animation and the layout prop.\n    </p>\n    <Switch2 />\n  </div>\n);\n\nexport default Example;",snippet4:"import { styled } from '@stitches/react';\nimport { AnimatePresence, LayoutGroup, motion } from 'framer-motion';\nimport React from 'react';\nimport Pill from './Pill';\nimport './scene.css';\n\nconst List = styled(motion.ul, {\n  padding: '16px',\n  width: '350px',\n  background: ' hsl(223, 15%, 10%)',\n  borderRadius: '8px',\n  display: 'grid',\n  gap: '16px',\n});\n\n\nconst ListItem = styled(motion.li, {\n  minWidth: '300px',\n  background: 'hsla(222, 89%, 65%, 10%)',\n  boxShadow: '0 0px 10px -6px rgba(0, 24, 40, 0.3)',\n  borderRadius: '8px',\n  padding: '8px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  cursor: 'pointer',\n  marginBottom: '0px',\n  color: 'hsl(223, 15%, 65%)',\n  fontSize: 18,\n});\n\nconst Button = styled('button', {\n  background: 'transparent',\n  cursor: 'pointer',\n  border: 'none',\n  shadow: 'none',\n  color: 'hsl(223, 15%, 65%)',\n  display: 'flex',\n});\n\nconst InfoBox = styled('div', {\n  width: '50%',\n});\n\nconst FilterWrapper = styled('div', {\n  marginBottom: '16px',\n  input: {\n    marginRight: '4px',\n  },\n  label: {\n    marginRight: '4px',\n  },\n});\n\nconst Title = motion.div;\n\nconst ARTICLES = [\n  {\n    category: 'swift',\n    title: 'Intro to SwiftUI',\n    description: 'An article with some SwitftUI basics',\n    id: 1,\n  },\n  {\n    category: 'js',\n    title: 'Awesome React stuff',\n    description: 'My best React tips!',\n    id: 2,\n  },\n  {\n    category: 'js',\n    title: 'Styled components magic',\n    description: 'Get to know ways to use styled components',\n    id: 3,\n  },\n  {\n    category: 'ts',\n    title: 'A guide to Typescript',\n    description: 'Type your React components!',\n    id: 4,\n  },\n];\n\nconst categoryToVariant = {\n  js: 'warning',\n  ts: 'info',\n  swift: 'danger',\n};\n\nconst Item = (props) => {\n  const { article, showCategory, expanded, onClick } = props;\n\n  const readButtonVariants = {\n    hover: {\n      opacity: 1,\n    },\n    initial: {\n      opacity: 0,\n    },\n  };\n\n  return (\n    <ListItem layout initial=\"initial\" whileHover=\"hover\" onClick={onClick}>\n      <InfoBox>\n        {/*\n          Try to add the \"layout\" prop to this motion component\n          and notice how it now gracefully moves as the list\n          item expands\n        */}\n        <Title\n        //layout\n        >\n          {article.title}\n        </Title>\n        <AnimatePresence>\n          {expanded && (\n            <motion.div\n              style={{ fontSize: '12px' }}\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n            >\n              {article.description}\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </InfoBox>\n      <AnimatePresence>\n        {showCategory && (\n          <motion.div\n            layout\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n          >\n            <Pill variant={categoryToVariant[article.category]}>\n              {article.category}\n            </Pill>\n          </motion.div>\n        )}\n      </AnimatePresence>\n      <motion.div\n        layout\n        variants={readButtonVariants}\n        transition={{ duration: 0.25 }}\n      >\n        <Button\n          aria-label=\"read article\"\n          title=\"Read article\"\n          onClick={(e) => e.preventDefault()}\n        >\n          &#8594;\n        </Button>\n      </motion.div>\n    </ListItem>\n  );\n};\n\nconst Component = () => {\n  const [showCategory, setShowCategory] = React.useState(false);\n  const [sortBy, setSortBy] = React.useState('title');\n  const [expanded, setExpanded] = React.useState(null);\n\n  const onSortChange = (event) => setSortBy(event.target.value);\n\n  const articlesToRender = ARTICLES.sort((a, b) => {\n    const itemA = a[sortBy].toLowerCase();\n    const itemB = b[sortBy].toLowerCase();\n\n    if (itemA < itemB) {\n      return -1;\n    }\n    if (itemA > itemB) {\n      return 1;\n    }\n    return 0;\n  });\n\n  return (\n    <>\n      <FilterWrapper>\n        <div>\n          <input\n            type=\"checkbox\"\n            id=\"showCategory2\"\n            checked={showCategory}\n            onChange={() => setShowCategory((prev) => !prev)}\n          />\n          <label htmlFor=\"showCategory2\">Show Category</label>\n        </div>\n        <div>\n          Sort by:{' '}\n          <input\n            type=\"radio\"\n            id=\"title\"\n            name=\"sort\"\n            value=\"title\"\n            checked={sortBy === 'title'}\n            onChange={onSortChange}\n          />\n          <label htmlFor=\"title\">Title</label>\n          <input\n            type=\"radio\"\n            id=\"category\"\n            name=\"sort\"\n            value=\"category\"\n            checked={sortBy === 'category'}\n            onChange={onSortChange}\n          />\n          <label htmlFor=\"category\">Category</label>\n        </div>\n      </FilterWrapper>\n      {/*\n        Since each layout animation in this list affect each other's layout\n        we have to wrap them in a `LayoutGroup`\n        Try to remove it! You should see that:\n        - without it concurrent layout animations when clicking on list \n        items end up being \"choppy\" \n        - with it concurrent layout animations when clicking on list items \n        are more graceful\n      */}\n      <LayoutGroup>\n        <List layout>\n          {articlesToRender.map((article) => (\n            <Item\n              key={article.id}\n              expanded={expanded === article.id}\n              onClick={() => setExpanded(article.id)}\n              article={article}\n              showCategory={showCategory}\n            />\n          ))}\n        </List>\n      </LayoutGroup>\n    </>\n  );\n};\n\nexport default Component;"},r=function(n){var t=n.snippet;return(0,o.jsx)(i.Z,{autorun:!0,template:"react",dependencies:{"framer-motion":"6.2.4","@stitches/react":"^1.2.7"},files:{"/App.js":{code:a[t]},"/Pill.js":{code:"import { styled } from '@stitches/react';\n\nconst Pill = styled('span', {\n  display: 'inline-flex !important',\n  alignItems: 'center',\n  justifyContent: 'center',\n  padding: '5px 8px !important',\n  minWidth: '40px',\n  fontSize: '12px',\n  fontWeight: '500',\n  cursor: 'default',\n  userSelect: 'none',\n  borderRadius: '8px',\n\n  background: 'var(--pill-background)',\n  color: 'var(--pill-color)',\n\n  variants: {\n    variant: {\n      info: {\n        '--pill-background': 'hsla(222, 89%, 65%, 10%)',\n        '--pill-color': 'hsla(222, 89%, 65%, 100%)',\n      },\n      success: {\n        '--pill-background': 'hsla(16, 100%, 55%, 15%)',\n        '--pill-color': 'hsla(16, 100%, 55%, 100%)',\n      },\n      warning: {\n        '--pill-background': 'hsla(42, 100%, 55%, 15%)',\n        '--pill-color': 'hsla(42, 100%, 55%)',\n      },\n      danger: {\n        '--pill-background': 'hsla(0, 95%, 60%, 15%)',\n        '--pill-color': 'hsla(0, 95%, 70%, 100%)',\n      },\n    },\n  },\n});\n\nexport default Pill;\n",hidden:!0},"/scene.css":{code:"\nhtml {\n    background: #20222B;\n    color: white;\n}\n\ncanvas {\n    width: 100vw;\n    height: 100vh;\n}",hidden:!0}}})}}}]);