"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9447],{8057:function(e,n,r){r.d(n,{Z:function(){return h}});var t=r(1799),a=r(9396),o=r(5893),i=r(2752),s=r(1130),l={"/index.js":{code:'import React, { StrictMode } from "react";\nimport { createRoot } from \'react-dom/client\';\nimport "./styles.css";\nimport "./center.css";\n\nimport App from "./App";\n\nconst container = document.getElementById(\'root\');\nconst root = createRoot(container);\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n',hidden:!0},"/center.css":{code:"\nbody {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 450px;\n    color: currentColor;\n}\n",hidden:!0},"/styles.css":{code:"/* Custom styles for your React previews here */\nbody {\n  font-family: sans-serif;\n  -webkit-font-smoothing: auto;\n  -moz-font-smoothing: auto;\n  -moz-osx-font-smoothing: grayscale;\n  font-smoothing: auto;\n  text-rendering: optimizeLegibility;\n  font-smooth: always;\n  -webkit-tap-highlight-color: transparent;\n  -webkit-touch-callout: none;\n}\n",hidden:!0},"/index.html":{code:'<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8" />\n  <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n  <title>React app</title>\n</head>\n<body>\n  <div id="root"></div>\n</body>\n</html>\n',hidden:!0}},c={colors:{hover:"var(--maximeheckel-colors-brand)",clickable:"var(--maximeheckel-colors-typeface-secondary)",accent:"var(--maximeheckel-colors-brand)",errorSurface:"var(--maximeheckel-colors-danger-emphasis)",error:"var(--maximeheckel-colors-danger)",surface3:"var(--maximeheckel-colors-emphasis)",surface2:"var(--maximeheckel-border-color)",surface1:"var(--code-snippet-background)"},syntax:{plain:"var(--token-comment)",comment:{color:"var(--token-comment)"},keyword:"var(--token-keyword)",tag:"var(--token-symbol)",punctuation:"var(--token-punctuation)",definition:"var(--token-function)",property:"var(--token-function)",static:"var(--token-comment)",string:"var(--token-selector)"},font:{body:"var(--font-display)",mono:"var(--font-mono)",size:"14px",lineHeight:"26px"}},m={showNavigator:!1,showInlineErrors:!0,showLineNumbers:!0,editorHeight:520},d=(0,s.g)("div",{".sp-layout":{position:"relative",marginBottom:"2.25rem",borderRadius:"var(--border-radius-2)",boxShadow:s.a[1],"@media (max-width: 750px)":{display:"block"},"@media (max-width: 1200px)":{width:"100vw",left:"50%",right:"50%",marginLeft:"-50vw",marginRight:"-50vw",borderRadius:"0px"},"@media (min-width: 1200px)":{position:"relative",width:"calc(100% + 200px)",marginLeft:"-100px",marginRight:"-100px"}},".cm-gutterElement":{fontSize:"12px",userSelect:"none",opacity:"1",color:"var(--maximeheckel-colors-typeface-tertiary)"},".button":{backgroundColor:"var(--maximeheckel-colors-body)!important",cursor:"pointer !important","&:hover":{backgroundColor:"var(--maximeheckel-colors-body)!important"}}}),h=function(e){var n,r=e.files,s=e.dependencies,h=e.template,p=e.autorun,y=void 0===p||p,u=e.editorOnly,v=void 0!==u&&u,b=e.renderOnly,g=void 0!==b&&b,f=(null===(n=e.options)||void 0===n?void 0:n.editorWidthPercentage)||50,x=100-f,k={react:l,"react-ts":"",vanilla:"","vanilla-ts":"",angular:"",vue:"",vue3:"",svelte:"",solid:""};return(0,o.jsx)(d,{children:(0,o.jsx)(i.oT,{template:h,theme:c,files:(0,t.Z)({},r,k[h]),customSetup:{dependencies:s||{}},options:{autorun:y},children:(0,o.jsxs)(i.sp,{children:[v?null:(0,o.jsx)(i.Gj,{showNavigator:m.showNavigator,style:{height:m.editorHeight,flexGrow:x,flexShrink:x,minWidth:x/(x+f)*700}}),g?null:(0,o.jsx)(i._V,(0,a.Z)((0,t.Z)({},m),{style:{height:m.editorHeight,flexGrow:f,flexShrink:f,minWidth:f/(x+f)*700}}))]})})})}},9447:function(e,n,r){r.r(n);var t=r(5893),a=r(2498),o=r(8057);n.default=function(){var e=(0,a.d)().dark;return(0,t.jsx)(o.Z,{autorun:!0,template:"react",dependencies:{"@stitches/react":"^1.2.7"},files:{"/App.js":{code:"import { styled } from '@stitches/react';\nimport './scene.css';\n\nconst StyledButton = styled('button', {\n    height: '45px',\n    borderRadius: '8px',\n    boxShadow: 'none',\n    border: 'none',\n    padding: '8px 16px',\n    textAlign: 'center',\n    color: 'var(--text-color)',\n    backgroundColor: 'var(--primary)',\n    cursor: 'pointer',\n    fontWeight: '500',\n    '&:hover': {\n      backgroundColor: 'var(--primary-hover)',\n    },\n    '&:focus': {\n      backgroundColor: 'var(--primary-focus)',\n    },\n  });\n  \n  /**\n    You can try to modify the lightness or base hue/saturation below.\n    You should see that the button hover and focus color will adapt and take into account\n    almost (see below why) any color!\n  **/\n  const BlueThemeWrapper = styled('div', {\n    '--base-primary': '222, 89%',\n    '--base-primary-lightness': '50%',\n    '--primary': 'hsla(var(--base-primary), var(--base-primary-lightness), 100%)',\n    '--primary-hover': `hsla(\n      var(--base-primary),\n      calc(var(--base-primary-lightness) - 10%),\n      /* --primary-hover is --primary but 10% darker */ 100%\n    )`,\n    '--primary-focus': `hsla(\n      var(--base-primary),\n      calc(var(--base-primary-lightness) - 20%),\n      /* --primary-hover is --primary but 20% darker */ 100%\n    )`,\n    '--text-color': 'hsla(0, 0%, 100%, 100%)',\n  });\n  \n  const CyanThemedWrapper = styled('div', {\n    '--base-primary': '185, 75%',\n    '--base-primary-lightness': '60%',\n    '--primary': 'hsla(var(--base-primary), var(--base-primary-lightness), 100%)',\n    '--primary-hover': `hsla(\n      var(--base-primary),\n      calc(var(--base-primary-lightness) - 10%),\n      100%\n    )`,\n    '--primary-focus': `hsla(\n      var(--base-primary),\n      calc(var(--base-primary-lightness) - 20%),\n      100%\n    )`,\n    '--text-color': 'hsla(0, 0%, 100%, 100%)',\n  });\n  \n  const RedThemeWrapper = styled('div', {\n    '--base-primary': '327, 80%',\n    '--base-primary-lightness': '40%',\n    '--primary': 'hsla(var(--base-primary), var(--base-primary-lightness), 100%)',\n    '--primary-hover': `hsla(\n      var(--base-primary),\n      calc(var(--base-primary-lightness) - 10%),\n      100%\n    )`,\n    '--primary-focus': `hsla(\n      var(--base-primary),\n      calc(var(--base-primary-lightness) - 20%),\n      100%\n    )`,\n    '--text-color': 'hsla(0, 0%, 100%, 100%)',\n  });\n  \n\nconst Test = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        height: '175px',\n      }}\n    >\n      <BlueThemeWrapper>\n        <StyledButton>Primary Button</StyledButton>\n      </BlueThemeWrapper>\n      <CyanThemedWrapper>\n        <StyledButton>Primary Button</StyledButton>\n      </CyanThemedWrapper>\n      <RedThemeWrapper>\n        <StyledButton>Primary Button</StyledButton>\n      </RedThemeWrapper>\n    </div>\n  );\n}\n\nexport default Test;"},"/scene.css":{code:e?"\nhtml {\n    background: #20222B;\n}\n\ncanvas {\n    width: 100vw;\n    height: 100vh;\n}":"\nhtml {\n    background: #F7F7FB;\n}\n\ncanvas {\n    width: 100vw;\n    height: 100vh;\n}",hidden:!0}}})}}}]);